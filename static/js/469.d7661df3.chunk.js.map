{"version":3,"file":"static/js/469.d7661df3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","store/contacts/selectors.js","components/ContactForm/ConstactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactItemContent/ContactItemContent.module.css?9933","components/ContactItemContent/ContactItemContent.jsx","store/filter/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.js","style/Input.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__title\":\"ContactForm_form__title__9z+Dq\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import React from 'react';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from 'store/contacts/selectors';\nimport { addContact } from 'store/contacts/operations';\nimport Button from 'style/Button';\nimport Input from 'style/Input';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const form = e.target;\n    const contact = {\n      id: nanoid(),\n      name: form.name.value,\n      number: form.number.value,\n    };\n    const loweredName = form.name.value.toLowerCase().trim();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase().trim() === loweredName\n      )\n    ) {\n      return alert(`${contact.name} is already in Your contacts!`);\n    }\n    if (contacts.some(contact => contact.number === form.number.value)) {\n      return alert(`${contact.number} is already in Your contacts!`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    form.reset();\n  }\n\n  return (\n    <section>\n      <h1 className={css.form__title}>Phonebook</h1>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>Name</label>\n        <Input\n          className={css.form__input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label className={css.form__label}>Number</label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <Button className={css.form__btn} type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </section>\n  );\n};\n\nContactForm.propTypes = {\n  number: PropTypes.string,\n  name: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"contacts__list\":\"ContactList_contacts__list__hSN0M\",\"contacts__item\":\"ContactList_contacts__item__9ozWV\",\"contacts__delete\":\"ContactList_contacts__delete__4Ok-w\",\"contacts__name\":\"ContactList_contacts__name__ItpdU\",\"contacts__number\":\"ContactList_contacts__number__+j+yn\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__name\":\"ContactItemContent_contacts__name__vQi7W\",\"contacts__number\":\"ContactItemContent_contacts__number__+HaU4\",\"contacts__wrapper\":\"ContactItemContent_contacts__wrapper__DFyjF\"};","import { deleteContact } from 'store/contacts/operations';\nimport css from './ContactItemContent.module.css';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from 'style/Button';\n\nexport const ContactItemContent = ({ contact }) => {\n  const dispatch = useDispatch();\n  const onClick = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <div className={css.contacts__wrapper}>\n      <p className={css.contacts__name}>{contact.name}</p>\n      <p className={css.contacts__number}>{contact.number}</p>\n      <Button type=\"button\" onClick={onClick} className={css.contacts__delete}>\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nContactItemContent.propTypes = {\n  contact: PropTypes.object,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'store/contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { ContactItemContent } from 'components/ContactItemContent/ContactItemContent';\nimport { selectFilteredContacts } from 'store/filter/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectIsLoading } from 'store/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <div className={css.contacts}>\n      <h2>Contacts</h2>\n      {!!isLoading && <Loader />}\n      <ul className={css.contacts__list}>\n        {contacts.length > 0 ? (\n          contacts.map(contact => (\n            <li className={css.contacts__item} key={contact.id}>\n              <ContactItemContent contact={contact} />\n            </li>\n          ))\n        ) : (\n          <p> No contacts added to the list</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from 'store/filter/filterSlice';\nimport Input from 'style/Input';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n  return (\n    <div className={css.filter}>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => handleChange(e)}\n        placeholder=\"Enter value\"\n      />\n    </div>\n  );\n};\n","import ContactForm from \"components/ContactForm/ConstactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"store/contacts/operations\";\nimport { selectError, selectIsLoading } from \"store/contacts/selectors\";\n\nexport default function Phonebook(){\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(()=>{\n        dispatch(fetchContacts());\n    },   [dispatch])\nreturn(\n    <>\n    <Helmet>\n        <title>Phonebook</title>\n    </Helmet>\n    <ContactForm/>\n    <Filter/>\n    <ContactList/>\n    {!!isLoading && !error && <Loader/>}\n    </>\n)\n}","import styled from 'styled-components';\n\nconst Input = styled.input`\n  min-width: 200px;\n  width: 95%;\n  height: 30px;\n  margin-bottom: 10px;\n  padding: 0 15px;\n  border-radius: 18px;\n  outline: none;\n  border: none;\n  color: gb(131, 167, 149);\n\n  &::placeholder {\n    color: rgb(131, 167, 149);\n  }\n`;\n\nexport default Input;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","target","contact","id","nanoid","name","value","number","loweredName","toLowerCase","trim","some","alert","addContact","reset","Input","type","placeholder","title","required","Button","ContactItemContent","onClick","deleteContact","selectFilteredContacts","createSelector","filter","includes","ContactList","Loader","length","map","Filter","onChange","setFilter","currentTarget","handleChange","Phonebook","useEffect","fetchContacts","Helmet","styled"],"sourceRoot":""}